# Default values for microservice.
# This is a YAML-formatted uploadFile.
# Declare variables to be passed into your templates.
global:
  replicaCount: 1
  environment: {}
  # list of key: value
  # GLOBAL1: value
labels:
  app: lms-web-test
replicaCount: 1

image:
  registry: registry.inter-nation.uz
  repository: /intestmax/lms-web/
  source: frontend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: "gitlab-registry"
nameOverride: ""
fullnameOverride: ""

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/auth-path: "auth/kubernetes-prod"
  vault.hashicorp.com/agent-inject-secret-.env: "secret/data/k8s/prod/lms-web"
  vault.hashicorp.com/secret-volume-path-.env: "/env"
  vault.hashicorp.com/role: "prod"
  vault.hashicorp.com/agent-inject-template-.env: |
    {{- with secret "secret/data/k8s/prod/lms-web" -}}
      {{- range $key, $value := .Data.data }}
        {{- printf "%s=%s\n"  $key $value }}
      {{- end }}
    {{ end -}}

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "vault-auth"

podLabels:
  app: prod

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext: {}

vault:
  enabled: false

environment:
  NEXT_PUBLIC_ENV_FILE_PATH: '/env'

service:
  type: ClusterIP
  annotations: {}
  specs:
    - port: 80
      targetPort: 3000
      name: http

ingress:
  enabled: true
  rules:
    - annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        kubernetes.io/ingress.class: nginx
        cert-manager.io/issuer: letsencrypt
      type: web
      hosts:
        - host: "web-lms.inter-nation.uz"
          path: /
          servicePort: 80
      tls:
        - secretName: test-lms-web-tls
          hosts:
            - "web-lms.inter-nation.uz"

# resources:
#    limits:
#      cpu: 150m
#      memory: 256Mi
#    requests:
#      cpu: 100m
#      memory: 200Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/prod
              operator: In
              values:
                - "true"
