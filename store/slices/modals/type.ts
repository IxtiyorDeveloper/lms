import { IGroup } from "types";
import { IContacts } from "types/contact";

export interface IUIStore {
  payment: Interface;
  stopping: Interface;
  changeTeacher: Interface;
  returnModal: Interface;
  taxModal: Interface;
  continueModal: Interface;
  debtorsListModal: Interface;
  returnMoneyCheckModal: Interface;
  incomeProductName: Interface;
  attend: Interface;
  groupStudentsList: Interface;
  requestConfirmModal: Interface;
  transferBack: Interface;
  slotCreateModal: Interface;
  createVacationModal: Interface;
  createTransaction: Interface;
  deleteModal: Interface;
  staffCreate: Interface;
  leaveDissatisfaction: Interface;
  confirmRestoreTaskCategory: Interface;
  rateTaskModal: Interface;
  taskUsers: Interface;
  block: Interface;
  candidateCreate: Interface;
  incomeCheckPreview: Interface;
  paymentCheckSecond: Interface;
  backToWaiting: Interface;
  createTask: Interface;
  createTaskCategory: Interface;
  taskView: Interface;
  group: Interface;
  createExpense: Interface;
  groupSms: Interface;
  transactionPayModal: Interface;
  blackListPrint: Interface;
  correction: Interface;
  financeConfig: Interface;
  removeCategory: Interface;
  salaryDetails: Interface;
  addBonus: Interface;
  createRoom: Interface;
  deleteCourse: Interface;
  groupTypeModal: Interface;
  levelModal: Interface;
  dayModal: Interface;
  deleteGroupType: Interface;
  deleteLevel: Interface;
  deleteLessonDay: Interface;
  createCourse: Interface;
  holiday: Interface;
  deleteHoliday: Interface;
  printSalaryDetails: Interface;
  groupNote: Interface;
  runningTypeModal: Interface;
  addToGroupModal: Interface;
  podo: Interface;
  unban: Interface;
  unblock: Interface;
  source: Interface;
  deleteSource: Interface;
  divideExpense: Interface;
  changePassword: Interface;
  checkPassword: Interface;
  new_students_stop: Interface;
  changeStartDate: Interface;
  takeGroup: Interface;
  deleteGroup: Interface;
  updateStudentFlow: Interface;
  passedStudents: Interface;
  lifeCycle: Interface;
  productAndService: Interface;
  deleteProductAndService: Interface;
  operator: Interface;
  deleteOperator: Interface;
  ban: Interface;
  transferLead: Interface;
  selfSms: Interface;
  paymentRequest: Interface;
  moveTransfer: Interface;
  complaint: Interface;
  deleteTransaction: Interface;
  deleteExpense: Interface;
  paymentTransaction: Interface;
  absModal: Interface;
  redListDownload: Interface;
  coverTeacher: Interface;
  deleteCoverTeacher: Interface;
  conditionalPass: Interface;
  examAttendance: Interface;
  archiveLifeCycle: Interface;
  officeHours: Interface;
  profileSalary: Interface;
  registeredLead: Interface;
  freshmanForProfile: Interface;
  confirmLogout: Interface;
  deleteLeadTab: Interface;
  addLeadTab: Interface;
  deleteLead: Interface;
  addLead: Interface;
  transactionLifeCycle: Interface;
  candidateModal: Interface;
  vacancyConfig: Interface;
  rejectCandidate: Interface;
  absCandidateModal: Interface;
  meetingCandidateModal: Interface;
  approveCandidate: Interface;
  candidateLifecycle: Interface;
  mergeCandidate: Interface;
  checkList: Interface;
  addDocumentTab: Interface;
  deleteDocumentTab: Interface;
  groupLifeCycle: Interface;
  dismissStaff: Interface;
  repositionStaff: Interface;
  candidateSMS: Interface;
  confirmFileDelete: Interface;
  dismissDocGenerate: Interface;
  docGenerate: Interface;
  rewardCancel: Interface;
  rewardGive: Interface;
  rewardRestore: Interface;
  rewardApprove: Interface;
  generateCandidateDetails: Interface;
  stockCategory: Interface;
  stockProduct: Interface;
  stockArrival: Interface;
  stockDeparture: Interface;
  stockTransfer: Interface;
  stockChange: Interface;
  cancelDismassal: Interface;
  cancelReposition: Interface;
  labelAddAll: Interface;
  giveAllSalary: Interface;
  labelAllFailedToPodo: Interface;
  restrictAccess: Interface;
  potentialFail: Interface;
  observation: Interface;
  deleteObservation: Interface;
  changeObservation: Interface;
  podoRequest: Interface;
  deletePodoRequest: Interface;
  paymentV2: Interface;
  giveStationary: Interface;
  newTransaction: Interface;
  integration: Interface;
  createObservation: Interface;
  responsibleStaff: Interface;
  deleteResponsible: Interface;
  templateModal: Interface;
  deleteTemplate: Interface;
  autoCall: Interface;
  deleteVacation: Interface;
  studentExamResult: Interface;
  studentMockExamResult: Interface;
  stoppingStatusChange: Interface;
  potentialFailRequest: Interface;
  deletePotentialFailRequest: Interface;
  restudyConfig: Interface;
  mockConfig: Interface;
  deleteStudentsNote: Interface;
}

export interface Interface {
  open: boolean;
  data: { [key: string]: any };
}

export interface IData {
  user?: IContacts;
  group?: IGroup;
  queryKeys?: string[];
}

export interface IPayload {
  key: keyof IUIStore;
  data: Interface;
}
